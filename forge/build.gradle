plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

configurations {
    shadow
}

architectury {
    platformSetupLoomIde()
    forge()
}

loom {
    forge {
        mixinConfig "langsplit-forge.mixins.json"
    }
}

processResources {
    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
    inputs.property "version", project.version
}

dependencies {
    minecraft("com.mojang:minecraft:${rootProject.architectury.minecraft}")
    mappings loom.officialMojangMappings()
    forge("net.minecraftforge:forge:${rootProject.architectury.minecraft}-${project.forge_version}")
    modImplementation("me.shedaniel.cloth:cloth-config-forge:${rootProject.cloth_config_version}")
    modImplementation("dev.architectury:architectury-forge:${rootProject.architectury_version}")

    implementation(project(path: ":common", configuration: "namedElements")) {
        transitive = false;
    }
    developmentForge(project(path: ":common", configuration: "namedElements")) {
        transitive = false
    }
    shadow(project(path: ":common", configuration: "transformProductionForge")) {
        transitive = false
    }
}

shadowJar {
    //relocate("com.fabbe50.langsplit.common", "com.fabbe50.langsplit.common.forge")
    exclude "fabric.mod.json"

    configurations = [project.configurations.shadow]
    classifier "shadow"
}

prepareRemapJar {
    dependsOn(shadowJar)
}

remapJar {
    dependsOn(shadowJar)
    inputFile.set(shadowJar.archivePath)
    archiveClassifier.set("forge")
}

jar {
    classifier "dev"
}